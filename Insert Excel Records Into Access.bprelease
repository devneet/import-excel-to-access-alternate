<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>Insert Excel Records Into Access</bpr:name>
    <bpr:release-notes>The pilot release of the rocess has been released.

Creator : Devneet Mohanty

Date : 11/07/2021</bpr:release-notes>
    <bpr:created>2017-02-28 18:30:00Z</bpr:created>
    <bpr:package-id>-1</bpr:package-id>
    <bpr:package-name>&lt;Adhoc Package&gt;</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="9">
        <process id="eebdc436-b888-4f77-9d40-797f669ccb29" name="Insert Records From Excel To Access" published="true" xmlns="http://www.blueprism.co.uk/product/process"><process name="Insert Records From Excel To Access" version="1.0" bpversion="6.10.0.30674" narrative="This process has been developed to demonstrate how we can use the MS Access - VBO to insert multiple records from an input excel file." byrefcollection="true"><view><camerax>259</camerax><cameray>175</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="30b843da-2054-46f3-98ba-2c09e2a0d25b" name="Start" type="Start"><display x="90" y="-285" /><onsuccess>70241cbf-1fa6-4a7a-87bb-d9558bb3969b</onsuccess></stage><stage stageid="533bcea7-9362-4f1e-81ed-611a7c77d016" name="End" type="End"><display x="90" y="570" /></stage><stage stageid="81e92eeb-8f12-4b3c-b0a1-0f0ed202fecc" name="Stage1" type="ProcessInfo"><display x="-375" y="-210" w="510" h="150" /></stage><stage stageid="44a33766-0d99-4c9d-ae00-654330af2901" name="Excel HDR" type="Data"><loginhibit onsuccess="true" /><display x="-465" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5475246-4965-471f-8da5-1cd05ab6f78f" name="Excel Connection String" type="Data"><loginhibit onsuccess="true" /><display x="-330" y="-75" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve"></initialvalue><private /><alwaysinit /></stage><stage stageid="62a9d785-23d8-4aaa-bf8b-ab06ece3aa5c" name="Excel Provider" type="Data"><loginhibit onsuccess="true" /><display x="-465" y="-75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa644647-09bb-441c-80b6-43794a532a1f" name="Excel Data Source" type="Data"><loginhibit onsuccess="true" /><display x="-330" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">E:\Study Backups\Robotic Process Automation Lessons\Blue Prism Lessons\Access &amp; Excel Operation\Class2.xlsx</initialvalue><private /><alwaysinit /></stage><stage stageid="a1ebc33a-9562-4f4d-9dd9-78dc0894c5a1" name="Excel Extended Properties" type="Data"><display x="-465" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="af771a2e-fa5b-4f1b-aa62-f5507ab96b52" name="Excel Query" type="Data"><loginhibit onsuccess="true" /><display x="-330" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f01a744-f6c1-447b-b8b0-62172a9f0693" name="Excel Sheet Name" type="Data"><loginhibit onsuccess="true" /><display x="-465" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Students</initialvalue><private /><alwaysinit /></stage><stage stageid="e1859251-cd49-4f07-add7-8f1adbb65f2a" name="Excel Data" type="Collection"><display x="-330" y="60" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0d8a4b99-7426-4102-9f30-03d2ce6716b3" name="Excel Data Items" type="Block"><loginhibit onsuccess="true" /><display x="-570" y="-105" w="360" h="195" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="b440c420-3f72-406a-8275-27f14b7a41ab" name="Access Data Items" type="Block"><loginhibit onsuccess="true" /><display x="-570" y="105" w="360" h="75" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="3912b4f2-0ec1-41d2-8292-44020b1c6c37" name="Access Data Source" type="Data"><loginhibit onsuccess="true" /><display x="-480" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">E:\Study Backups\Robotic Process Automation Lessons\Blue Prism Lessons\Access &amp; Excel Operation\Class1.accdb</initialvalue><private /><alwaysinit /></stage><stage stageid="5f8247d1-7e93-4100-bab3-47f49ccdcc0a" name="Access Table Name" type="Data"><loginhibit onsuccess="true" /><display x="-315" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Students</initialvalue><private /><alwaysinit /></stage><stage stageid="5209500b-2088-4fbd-affc-c4c272f0ab88" name="Exception Block" type="Block"><loginhibit onsuccess="true" /><display x="-45" y="-45" w="375" h="585" /><font family="Segoe UI" size="10" style="Regular" color="808000" /></stage><stage stageid="892b7e7f-1597-487b-9c91-93dc7fe60090" name="Recover1" type="Recover"><loginhibit /><display x="240" y="420" w="120" h="30" /><font family="Segoe UI" size="10" style="Bold" color="FF0000" /><onsuccess>ecded34a-7260-49ae-af51-1b8985a1c6d8</onsuccess></stage><stage stageid="ecded34a-7260-49ae-af51-1b8985a1c6d8" name="Set Exception Data Items" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="420" y="420" w="150" h="30" /><onsuccess>ce4d5ff4-584f-4480-8766-6e9bd6f966c1</onsuccess><steps><calculation expression="ExceptionType() &amp; &quot; : &quot; &amp; ExceptionDetail()" stage="Exception Details" /><calculation expression="ExceptionStage()" stage="Exception Stage" /></steps></stage><stage stageid="ce4d5ff4-584f-4480-8766-6e9bd6f966c1" name="Resume1" type="Resume"><loginhibit /><display x="630" y="420" w="120" h="30" /><font family="Segoe UI" size="10" style="Bold" color="FF0000" /><onsuccess>466c2a2d-af92-4703-adb7-6956bcef8341</onsuccess></stage><stage stageid="466c2a2d-af92-4703-adb7-6956bcef8341" name="If Retry Count &lt; Max Retry Count ?" type="Decision"><display x="870" y="420" w="150" h="90" /><font family="Segoe UI" size="10" style="Bold" color="FF00FF" /><decision expression="[Exception Retry Count] &lt; [Exception Max Retry Count]" /><ontrue>0476fb61-1150-4a36-b482-4cb3a2511a6a</ontrue></stage><stage stageid="9ef32289-0edb-4b1a-a2ea-15e0dc09e936" name="Kill Process" type="Action"><loginhibit onsuccess="true" /><display x="870" y="-15" w="150" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="[Process Name]" /></inputs><onsuccess>894b2598-42de-4fb4-a20c-1475c092ab7b</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="21161e1b-8502-460e-a1f5-b3ffdb8c0a6b" name="Set MS Access Process Name" type="Calculation"><loginhibit onsuccess="true" /><display x="870" y="75" w="150" h="30" /><onsuccess>9ef32289-0edb-4b1a-a2ea-15e0dc09e936</onsuccess><calculation expression="&quot;MSACCESS&quot;" stage="Process Name" /></stage><stage stageid="894b2598-42de-4fb4-a20c-1475c092ab7b" name="Set MS Excel Process Name" type="Calculation"><loginhibit onsuccess="true" /><display x="630" y="-15" w="150" h="30" /><onsuccess>5d4f54e0-3789-4727-a4c8-b103ed79e850</onsuccess><calculation expression="&quot;EXCEL&quot;" stage="Process Name" /></stage><stage stageid="5d4f54e0-3789-4727-a4c8-b103ed79e850" name="Kill Process" type="Action"><loginhibit onsuccess="true" /><display x="420" y="-15" w="150" h="30" /><inputs><input type="text" name="Process Name" friendlyname="Process Name" narrative="The name of the process to kill" expr="[Process Name]" /></inputs><onsuccess>10755eed-c98b-4ab4-9443-75b1a241a321</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="0476fb61-1150-4a36-b482-4cb3a2511a6a" name="Increment Retry Count" type="Calculation"><loginhibit onsuccess="true" /><display x="870" y="300" w="150" h="30" /><onsuccess>21161e1b-8502-460e-a1f5-b3ffdb8c0a6b</onsuccess><calculation expression="1+[Exception Retry Count]" stage="Exception Retry Count" /></stage><stage stageid="f7bac094-7ff0-46a3-af3b-9d5348d5140e" name="Process Name" type="Data"><display x="-390" y="225" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00978c3c-f944-4e0d-951e-fac6c77a970d" name="Exception Retry Count" type="Data"><loginhibit onsuccess="true" /><display x="-465" y="405" w="180" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="55cb05f1-e6af-40cc-b16b-fa06ce6f3174" name="Exception Max Retry Count" type="Data"><loginhibit onsuccess="true" /><display x="-315" y="405" w="180" h="30" /><datatype>number</datatype><initialvalue>3</initialvalue><private /><alwaysinit /></stage><stage stageid="14c1b150-9062-4571-85af-fd4d393bfe9e" name="Exception Stage" type="Data"><display x="-465" y="450" w="180" h="30" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97bc2ba9-1e6c-4d9d-93c8-62038d811f0d" name="Exception Details" type="Data"><display x="-315" y="450" w="180" h="30" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00d42952-7f3c-49bf-9b0e-d4bb479a1b49" name="Locals" type="Block"><loginhibit onsuccess="true" /><display x="-570" y="195" w="360" h="150" /><font family="Segoe UI" size="10" style="Regular" color="000080" /></stage><stage stageid="10755eed-c98b-4ab4-9443-75b1a241a321" name="Set Connection String For Excel" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="90" y="-15" w="150" h="30" /><onsuccess>729230bb-c92d-4c90-b08a-e0caa32f09eb</onsuccess><steps><calculation expression="&quot;Provider={Provider};Data Source={Data Source};Extended Properties=&quot; &amp; &quot;&quot;&quot;&quot; &amp; &quot;{Extended Properties};HDR={HDR};&quot;&amp;&quot;&quot;&quot;&quot;&#xA;" stage="Excel Connection String" /><calculation expression="&quot;Microsoft.ACE.OLEDB.12.0&quot;" stage="Excel Provider" /><calculation expression="&quot;Excel 12.0&quot;" stage="Excel Extended Properties" /><calculation expression="&quot;YES&quot;" stage="Excel HDR" /><calculation expression="Replace(Replace(Replace(Replace([Excel Connection String],&quot;{Provider}&quot;,[Excel Provider]),&quot;{Data Source}&quot;,[Excel Data Source]),&quot;{Extended Properties}&quot;,[Excel Extended Properties]),&quot;{HDR}&quot;,[Excel HDR])" stage="Excel Connection String" /></steps></stage><stage stageid="729230bb-c92d-4c90-b08a-e0caa32f09eb" name="Set OLEDB Connection For Excel" type="Action"><loginhibit onsuccess="true" /><display x="90" y="30" w="150" h="30" /><inputs><input type="text" name="Database" friendlyname="Database" narrative="Optional. The path to the oledb database file" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="Optional. The password if required to open the oledb database." expr="" /><input type="text" name="Provider" friendlyname="Provider" narrative="Optional. Allows the database provider to be overridden." expr="" /><input type="text" name="Connection String" friendlyname="Connection String" narrative="Optional. Allows the full connection string to be provided. If supplying this parameter no other parameters are required." expr="[Excel Connection String]" /></inputs><onsuccess>906479a9-002c-4df4-8689-56f1511d7e58</onsuccess><resource object="Data - OLEDB" action="Set Connection" /></stage><stage stageid="3ce83509-6bd8-46fe-86cb-26a353d69ee3" name="Read Data For Excel" type="Action"><loginhibit onsuccess="true" /><display x="90" y="150" w="150" h="30" /><inputs><input type="text" name="SQL" friendlyname="SQL" narrative="An SQL query to fetch the data. In most cases this will be a 'select' query." expr="[Excel Query]" /></inputs><outputs><output type="collection" name="Results" friendlyname="Results" stage="Excel Data" /></outputs><onsuccess>84bdc9ae-bb7f-4082-b89f-79b75612f7b7</onsuccess><resource object="Data - OLEDB" action="Get Collection" /></stage><stage stageid="84bdc9ae-bb7f-4082-b89f-79b75612f7b7" name="Close Connection For Excel" type="Action"><loginhibit onsuccess="true" /><display x="90" y="210" w="150" h="30" /><onsuccess>59261e83-781a-4fc0-b812-da1704281333</onsuccess><resource object="Data - OLEDB" action="Close" /></stage><stage stageid="906479a9-002c-4df4-8689-56f1511d7e58" name="Set Query Parameters" type="MultipleCalculation"><loginhibit onsuccess="true" /><display x="90" y="90" w="150" h="30" /><onsuccess>3ce83509-6bd8-46fe-86cb-26a353d69ee3</onsuccess><steps><calculation expression="&quot;SELECT * FROM [&quot; &amp; [Excel Sheet Name] &amp; &quot;$]&quot;" stage="Excel Query" /></steps></stage><stage stageid="59261e83-781a-4fc0-b812-da1704281333" name="Delete All Records From Access" type="Action"><loginhibit onsuccess="true" /><display x="90" y="270" w="150" h="30" /><inputs><input type="text" name="Database File Path" friendlyname="Database File Path" narrative="The MS access database file path from where all of the table data needs to be deleted." expr="[Access Data Source]" /><input type="text" name="Table Name" friendlyname="Table Name" narrative="The table name in the MS Access database file where deletion operation will take place." expr="[Access Table Name]" /></inputs><outputs><output type="text" name="Message" friendlyname="Message" narrative="The execution message for the action." stage="Message" /><output type="flag" name="Success" friendlyname="Success" narrative="The flag value indication the status of the action." stage="Success" /></outputs><onsuccess>55764d57-1c8c-4e85-ab90-76693ec3980c</onsuccess><resource object="MS Access VBO" action="Delete All Records" /></stage><stage stageid="a2a37464-7ca8-4086-b664-dac79e9df9c5" name="Message" type="Data"><display x="-315" y="270" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a36ae941-ebb5-44e2-82b0-b19f0585cfcf" name="Success" type="Data"><display x="-465" y="270" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fdfc90ec-1a0b-4d0e-8ab6-6c2b9a6ad1c9" name="Insert All Records Into Access" type="Action"><loginhibit onsuccess="true" /><display x="90" y="420" w="150" h="30" /><inputs><input type="text" name="Database File Path" friendlyname="Database File Path" narrative="The MS access database file path records need to be inserted." expr="[Access Data Source]" /><input type="text" name="Table Name" friendlyname="Table Name" narrative="The table name in the MS Access database file where insertion operation will take place." expr="[Access Table Name]" /><input type="collection" name="Input Data" friendlyname="Input Data" narrative="The datatable which needs to be inserted." expr="[Excel Data]" /></inputs><outputs><output type="text" name="Message" friendlyname="Message" narrative="The execution message for the action." stage="Message" /><output type="flag" name="Success" friendlyname="Success" narrative="The flag value indication the status of the action." stage="Success" /></outputs><onsuccess>cfa37faf-244c-4f5c-baaa-17291ec6eae5</onsuccess><resource object="MS Access VBO" action="Insert All Records" /></stage><stage stageid="1d0c8d48-2ebb-4386-9670-57b1bfa0dbce" name="Exception Variables" type="Block"><loginhibit onsuccess="true" /><display x="-570" y="360" w="360" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="47b7afb2-d897-457d-bbe8-e3a6034b562d" name="If Excel File Path &amp; Access File Path Exists ?" type="Decision"><display x="90" y="-90" w="210" h="60" /><font family="Segoe UI" size="10" style="Bold" color="FF00FF" /><decision expression="[Access Exists] = True AND [Excel Exists] = True" /><ontrue>10755eed-c98b-4ab4-9443-75b1a241a321</ontrue><onfalse>6cf5daa0-eb1f-4ac6-bc8f-1f8dd9f8eee9</onfalse></stage><stage stageid="70241cbf-1fa6-4a7a-87bb-d9558bb3969b" name="Excel File Path Existence" type="Action"><loginhibit onsuccess="true" /><display x="90" y="-225" w="150" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[Excel Data Source]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="Excel Exists" /></outputs><onsuccess>9c372df1-da6b-497a-bce6-32ade757a8b8</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="39743b63-ea25-4bc3-9d35-66c973b63584" name="Excel Exists" type="Data"><display x="-315" y="315" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c372df1-da6b-497a-bce6-32ade757a8b8" name="Access File Path Existence" type="Action"><loginhibit onsuccess="true" /><display x="90" y="-165" w="150" h="30" /><inputs><input type="text" name="File Name" friendlyname="File Name" narrative="The name of the file to check" expr="[Access Data Source]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the file exists" stage="Access Exists" /></outputs><onsuccess>47b7afb2-d897-457d-bbe8-e3a6034b562d</onsuccess><resource object="Utility - File Management" action="File Exists" /></stage><stage stageid="866c6fba-a6d9-475a-9eed-8251d1971f45" name="Access Exists" type="Data"><display x="-465" y="315" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6cf5daa0-eb1f-4ac6-bc8f-1f8dd9f8eee9" name="Mandatory File Does Not Exists" type="Exception"><display x="300" y="-90" w="120" h="30" /><font family="Segoe UI" size="10" style="Bold" color="FF0000" /><exception localized="yes" type="Business Exception" detail="&quot;Mandatory file does not exists. Please check the excel and access file paths.&quot;" /></stage><stage stageid="55764d57-1c8c-4e85-ab90-76693ec3980c" name="Is Deletion Operation Successful ?" type="Decision"><display x="90" y="345" w="120" h="60" /><font family="Segoe UI" size="10" style="Bold" color="FF00FF" /><decision expression="[Success]" /><ontrue>fdfc90ec-1a0b-4d0e-8ab6-6c2b9a6ad1c9</ontrue><onfalse>134cf736-d6e3-4a37-b426-331aafe2b58c</onfalse></stage><stage stageid="134cf736-d6e3-4a37-b426-331aafe2b58c" name="Access Operation Unsuccessful" type="Exception"><display x="240" y="345" w="120" h="30" /><font family="Segoe UI" size="10" style="Bold" color="FF0000" /><exception localized="yes" type="System Exception" detail="[Message]" /></stage><stage stageid="cfa37faf-244c-4f5c-baaa-17291ec6eae5" name="Is Insertion Operation Successful ?" type="Decision"><display x="90" y="495" w="120" h="60" /><font family="Segoe UI" size="10" style="Bold" color="FF00FF" /><decision expression="[Success]" /><ontrue>533bcea7-9362-4f1e-81ed-611a7c77d016</ontrue><onfalse>919a483a-d120-4c17-8829-618d0adbfd8e</onfalse></stage><stage stageid="919a483a-d120-4c17-8829-618d0adbfd8e" name="Access Operation Unsuccessful" type="Exception"><display x="240" y="495" w="120" h="30" /><font family="Segoe UI" size="10" style="Bold" color="FF0000" /><exception localized="yes" type="System Exception" detail="[Message]" /></stage></process></process>
        <object id="9fc19dda-3610-454f-8713-a55af212d309" name="Data - OLEDB" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - OLEDB" version="6.2.0.2669" bpversion="6.10.0.30674" narrative="A SQL interface for interacting with OLEDB data sources" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>ed09581b-7493-46ed-8dfa-8f00d46356b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><endpoint narrative="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-161</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>20</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="True"><name>Close</name><view><camerax>86</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>-42</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ad00c3c-8615-4f62-9595-9081a2523133" type="Normal" published="True"><name>Execute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.OLEDB</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private moConnection As OLEDBConnection]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Sets the connection details for the database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Database" narrative="Optional. The path to the oledb database file" stage="Database" /><input type="password" name="Password" narrative="Optional. The password if required to open the oledb database." stage="Password" /><input type="text" name="Provider" narrative="Optional. Allows the database provider to be overridden." stage="Provider" /><input type="text" name="Connection String" narrative="Optional. Allows the full connection string to be provided. If supplying this parameter no other parameters are required." stage="Connection String" /></inputs><onsuccess>935af892-73c5-4d1a-871f-536b70e44a8f</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source=&quot; &amp; [Database] &amp; &quot;; Jet OLEDB:Database Password=&quot; &amp; [Password] &amp;&quot;;&quot;" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><narrative>Opens a connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><code><![CDATA[If moConnection Is Nothing Then
	moConnection = New OLEDBConnection(ConnectionString)
	moConnection.Open()
End If]]></code></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><loginhibit /><display x="180" y="120" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Closes the connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6bd7feeb-d610-4f7b-9646-df99afade77a" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="b9924b3b-5eea-41f5-9d73-8f4624ba22fe" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b9924b3b-5eea-41f5-9d73-8f4624ba22fe</onsuccess><code><![CDATA[moConnection.Close()
moConnection.Dispose()
moConnection = Nothing]]></code></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="An SQL query to fetch the data. In most cases this will be a 'select' query." stage="SQL" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Results" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><code><![CDATA[Dim oDataAdapter As New OLEDBDataAdapter(SQL,moConnection)

Dim oDataSet As New DataSet		
oDataAdapter.Fill(oDataset)

Results = oDataSet.Tables(0)]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>897f736f-bc15-4938-9d97-b4c1065dd5e1</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-180" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="Password Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the password is set use password in connection string.</narrative><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[PasswordText]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source=&quot; &amp; [Database] &amp; &quot;;&quot;" stage="Connection String" /></stage><stage stageid="b0dbeba0-75c2-479b-9d5d-bde261b4db20" name="Provider" type="Data"><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="16cd8677-ab9b-4269-9a0b-1e4956f4d103" name="Provider Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Provider]&lt;&gt;&quot;&quot;" /><ontrue>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</ontrue><onfalse>8b21c0e2-f0c8-4c89-8636-f648382b8c37</onfalse></stage><stage stageid="8b21c0e2-f0c8-4c89-8636-f648382b8c37" name="Set Provider" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4eb62611-4eee-4ad8-9ffd-bf789ac796ad</onsuccess><calculation expression="&quot;Microsoft.Jet.OLEDB.4.0&quot;" stage="Provider" /></stage><stage stageid="4eb62611-4eee-4ad8-9ffd-bf789ac796ad" name="anchor1" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</onsuccess></stage><stage stageid="35e769d9-71b0-43da-8bda-6e4cbd3d0e55" name="Get Password Text" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f4ca0da-93ad-492e-af65-ff637c54b37a</onsuccess><calculation expression="[Password]" stage="PasswordText" /></stage><stage stageid="8cc8ad2a-2fa6-41ee-abc4-def727b8035c" name="PasswordText" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-60" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="935af892-73c5-4d1a-871f-536b70e44a8f" name="Connection String Provided" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Connection String])&gt;0" /><ontrue>59f15fcb-a597-4b07-9bf2-27c46f27b6c6</ontrue><onfalse>16cd8677-ab9b-4269-9a0b-1e4956f4d103</onfalse></stage><stage stageid="59f15fcb-a597-4b07-9bf2-27c46f27b6c6" name="End1" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-75" y="-60" /></stage><stage stageid="867d0e4f-77f9-4ce5-98fe-24936bd70fef" name="Execute" type="SubSheetInfo"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3759797-b7e7-4c69-abe5-9eef2b589950" name="Start" type="Start"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="SQL" stage="SQL" /></inputs><onsuccess>e5eaf88d-54e6-4dc2-a219-327908c231f1</onsuccess></stage><stage stageid="39a5fcd1-fd83-4b7b-a7c1-988b88708eb6" name="End" type="End"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e5eaf88d-54e6-4dc2-a219-327908c231f1" name="Execute" type="Code"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><onsuccess>39a5fcd1-fd83-4b7b-a7c1-988b88708eb6</onsuccess><code><![CDATA[Dim oCommand As New OleDbCommand(SQL,moConnection)
oCommand.ExecuteNonQuery()
]]></code></stage></process></object>
        <object id="d731156a-ea9e-4413-831a-19959dab2536" name="MS Access VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Access VBO" version="1.0" bpversion="6.10.0.30674" narrative="This custom object has been created in order to interact with MS Access application using Microsoft.Office.Interop and Access.DAO namespaces." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>03b088a5-2c2f-44fc-8a6c-460941a66a8e</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="a5eff8f5-6bb4-4e5a-b467-ca4261fb9e4d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="43ac8586-1d2e-40a3-9a3a-7132bb9e6990" type="Normal" published="True"><name>Insert All Records</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f0105564-0603-4af6-b694-9414d27df2c3" type="Normal" published="True"><name>Delete All Records</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="83a325c8-d2a4-4351-a553-e0cddcd2b3bb" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>1c431b6f-da50-4c12-a768-349b55e3df75</onsuccess></stage><stage stageid="1c431b6f-da50-4c12-a768-349b55e3df75" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="97b636c0-9c44-4257-b078-0470c2f565e5" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="270" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.Office.Interop.Access.dll</reference><reference>E:\Blue Prism\Microsoft.Office.interop.access.dao.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Microsoft.Office.Interop.Access</import><import>System.Collections.Generic</import><import>Microsoft.Office.Interop.Access.Dao</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="b57e8ff8-004d-4ddf-ac70-931d6baa3804" name="Clean Up" type="SubSheetInfo"><subsheetid>a5eff8f5-6bb4-4e5a-b467-ca4261fb9e4d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9be92e63-7e9a-4406-bc63-2298b8f34891" name="Start" type="Start"><subsheetid>a5eff8f5-6bb4-4e5a-b467-ca4261fb9e4d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>21262ef1-467b-494e-84ef-7ff766175322</onsuccess></stage><stage stageid="21262ef1-467b-494e-84ef-7ff766175322" name="End" type="End"><subsheetid>a5eff8f5-6bb4-4e5a-b467-ca4261fb9e4d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b6282788-d289-447d-930a-36d8d048dc88" name="Insert All Records" type="SubSheetInfo"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><narrative>This action has been created to insert all the records of a given datatable in the supplied table of the MS Access database file.</narrative><display x="-345" y="-180" w="510" h="210" /></stage><stage stageid="a829fe4f-594d-4025-8b61-31b18e39340e" name="Start" type="Start"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="120" y="-150" /><inputs><input type="text" name="Database File Path" narrative="The MS access database file path records need to be inserted." stage="Database File Path" /><input type="text" name="Table Name" narrative="The table name in the MS Access database file where insertion operation will take place." stage="Table Name" /><input type="collection" name="Input Data" narrative="The datatable which needs to be inserted." stage="Input Data" /></inputs><onsuccess>eeccd777-a27f-4e80-85ce-08ef292e4f2f</onsuccess></stage><stage stageid="dcd861ef-ee31-4bb5-bce2-91049e14943c" name="End" type="End"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="120" y="45" /><outputs><output type="text" name="Message" narrative="The execution message for the action." stage="Message" /><output type="flag" name="Success" narrative="The flag value indication the status of the action." stage="Success" /></outputs></stage><stage stageid="ae68cf90-704d-49cf-8b0d-4ebb24bc5e23" name="" type="Note"><subsheetid>a5eff8f5-6bb4-4e5a-b467-ca4261fb9e4d</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="2f74c71e-61ab-4fdc-be44-f36706570c13" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="75" w="180" h="230" /></stage><stage stageid="eeccd777-a27f-4e80-85ce-08ef292e4f2f" name="Insert All Records" type="Code"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="120" y="-60" w="150" h="30" /><inputs><input type="text" name="Database File Path" expr="[Database File Path]" /><input type="text" name="Table Name" expr="[Table Name]" /><input type="collection" name="Input Data" expr="[Input Data]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>dcd861ef-ee31-4bb5-bce2-91049e14943c</onsuccess><code><![CDATA[Success = false;
Message = "";
var firstIteration = false;

try{
	
	// Total Number Of Rows & Columns
	var rowCount = Input_Data.Rows.Count;
	var colCount = Input_Data.Columns.Count;

	// Initialize MS Access Application Object :
	var accApp = new Microsoft.Office.Interop.Access.Application();
	
	// Open MS Access Database File :
	accApp.OpenCurrentDatabase(Database_File_Path);
	
	// Initialize MS Access DAO Database Object :
	Microsoft.Office.Interop.Access.Dao.Database cdb = accApp.CurrentDb();
	
	// Create RecordSet Object :
	Microsoft.Office.Interop.Access.Dao.Recordset rs = cdb.OpenRecordset(Table_Name);
	
	// Create Fields Object :
	Microsoft.Office.Interop.Access.Dao.Field[] myFields = new Microsoft.Office.Interop.Access.Dao.Field[colCount];
	
	// Iterate Via Data Table Row Count :
	for (int i = 0; i < rowCount; i++) {
		
		// Insert New Row In MS Access Table :
		rs.AddNew();
		
		// Iterate Via Data Table Column Count :
		for (int k = 0; k < colCount; k++) {
				
				if (!firstIteration){
					
						// Update Column Name Of Record set
						myFields[k] = rs.Fields[Input_Data.Columns[k].ColumnName];
					
					}
					
				myFields[k].Value = Convert.ToString(Input_Data.Rows[i][k]);
				
			}
			
			rs.Update();
			firstIteration = true;
		
		}

	// Close MS Access DAO Database Object :
	rs.Close();
	accApp.CloseCurrentDatabase();
	
	// Quit Application
	accApp.Quit();
	
	Success = true;
	Message = "All records are successfully inserted.";
	
}catch (Exception ex){
	
	Message = "An error occured while inserting all records : " + ex.Message;
	Success = false;

	}]]></code></stage><stage stageid="48175f73-9e77-45d5-86fa-3d6dce6a32d1" name="Database File Path" type="Data"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><display x="-270" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e9c9429-34b6-42de-9b51-306c3bc615aa" name="Table Name" type="Data"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><display x="-435" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="417f3355-04ec-4a3b-82e3-dd07cfbdf9a0" name="Message" type="Data"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><display x="-270" y="120" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14ef1b20-7f97-4c8d-86b6-1ee7c9829227" name="Success" type="Data"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><display x="-435" y="120" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3556e2d0-8a2b-4f20-989e-40327c6d26e1" name="Inputs" type="Block"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="-540" y="-60" w="375" h="120" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="7dcbd516-f2e4-44f7-94a7-6366c381dcdc" name="Outputs" type="Block"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="-540" y="75" w="375" h="90" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="8474da75-03ac-46e2-8066-1a8f217bf992" name="Input Data" type="Collection"><subsheetid>43ac8586-1d2e-40a3-9a3a-7132bb9e6990</subsheetid><loginhibit /><display x="-360" y="30" w="180" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7e2f262d-3228-4fae-9e12-1e349f4b6ee5" name="Delete All Records" type="SubSheetInfo"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><narrative>This action has been created to delete all the records from a given table in the supplied MS Access database file.</narrative><display x="-345" y="-180" w="510" h="210" /></stage><stage stageid="16d8daaf-b3e2-425f-913f-d73ce2f01a95" name="Start" type="Start"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><loginhibit /><display x="120" y="-150" /><inputs><input type="text" name="Database File Path" narrative="The MS access database file path from where all of the table data needs to be deleted." stage="Database File Path" /><input type="text" name="Table Name" narrative="The table name in the MS Access database file where deletion operation will take place." stage="Table Name" /></inputs><onsuccess>681b7849-59aa-4369-a043-ebd179d18f18</onsuccess></stage><stage stageid="681b7849-59aa-4369-a043-ebd179d18f18" name="Delete All Records" type="Code"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><loginhibit /><display x="120" y="-60" w="150" h="30" /><inputs><input type="text" name="Database File Path" expr="[Database File Path]" /><input type="text" name="Table Name" expr="[Table Name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>56d56236-b181-404b-938c-f32da6655e16</onsuccess><code><![CDATA[Success = false;
Message = "";

try{

	// Initialize MS Access Application Object :
	var accApp = new Microsoft.Office.Interop.Access.Application();
	
	// Open MS Access Database File :
	accApp.OpenCurrentDatabase(Database_File_Path);
	
	// Initialize MS Access DAO Database Object :
	Microsoft.Office.Interop.Access.Dao.Database cdb = accApp.CurrentDb();

	// Delete All Records
	cdb.Execute("DELETE FROM " + Table_Name);
	
	// Close MS Access DAO Database Object :
	accApp.CloseCurrentDatabase();
	
	// Quit Application
	accApp.Quit();
	
	Success = true;
	Message = "All records are deleted successfully.";
	
}catch (Exception ex){
	
	Message = "An error occured while deleting all records : " + ex.Message;
	Success = false;

	}]]></code></stage><stage stageid="300113af-b354-485a-9f0b-f5ea82c72dc6" name="Database File Path" type="Data"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><display x="-270" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2390c229-1519-4ea1-ba5f-2b9946765923" name="Table Name" type="Data"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><display x="-435" y="-15" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="104b87b0-4091-4008-9326-9c560fda2dfe" name="Message" type="Data"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><display x="-270" y="105" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc569445-b868-4c6b-b265-5a9bcb1e254f" name="Success" type="Data"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><display x="-435" y="105" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d94a7e7-4f01-47a3-865a-56669abd52d9" name="Inputs" type="Block"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><loginhibit /><display x="-540" y="-60" w="375" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="7518b1e8-202b-4c2d-a084-781ef8be3063" name="Outputs" type="Block"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><loginhibit /><display x="-540" y="60" w="375" h="90" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="56d56236-b181-404b-938c-f32da6655e16" name="End" type="End"><subsheetid>f0105564-0603-4af6-b694-9414d27df2c3</subsheetid><loginhibit /><display x="120" y="45" /><outputs><output type="text" name="Message" narrative="The execution message for the action." stage="Message" /><output type="flag" name="Success" narrative="The flag value indication the status of the action." stage="Success" /></outputs></stage></process></object>
        <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" name="Utility - Environment" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment" version="6.2.0.2669" bpversion="6.10.0.30674" narrative="Utilities for interacting with the environment - read screen resolution, determine OS type, etc." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7ea3097-4e9b-48f3-9431-68977353a6bc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="6e5c9120-5c20-4fe2-9bfd-149470c9a1ea" name="Clean Up" type="SubSheetInfo"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e36d7ef5-340c-4d1f-a670-d1f1dcd7bdc3" name="Start" type="Start"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1451859f-91ff-4e0a-b8a8-7bbd6dc50341</onsuccess></stage><stage stageid="1451859f-91ff-4e0a-b8a8-7bbd6dc50341" name="End" type="End"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="c970b361-339a-4e60-a056-cf8571553cb8" name="new" type="Note"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>Force kills all processes with a given name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="120" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[  Try
    for each p as System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
      p.kill
    next
  Catch ex As Exception
  End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ddad15-d793-4697-8f79-1a42247fb0ba" name="Note1" type="Note"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[If Arguments<>"" Then
  System.Diagnostics.Process.Start(Application, Arguments)
Else
  System.Diagnostics.Process.Start(Application)
End If]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[timedOut = False
Dim startTime as Date = Date.Now

Dim info as New ProcessStartInfo(appn)
If args <> "" Then  info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit( _
	 CInt(timeout.TotalMilliseconds))
End Using]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99a09b67-00bd-4e8a-bad7-2f589ac9de94" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[                Try
                  Found_ = False
                  Dim bProcFound as Boolean = False
                  Dim iLoop as Integer = 0
                  Dim myProcesses() As System.Diagnostics.Process
                  Dim instance As System.Diagnostics.Process
                  Do While bProcFound = False AND iLoop < Max_Wait
                    myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
                    For Each instance In myProcesses
                        bProcFound = True
                        Found_ = True
                    Next
                    Threading.Thread.Sleep(1000)
                    iloop += 1
                  Loop
                Catch ex As Exception
                End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard" /></inputs><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="[Clipboard]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA[System.Windows.Forms.Clipboard.SetDataObject(Clipboard)]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="&quot;&quot;" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" name="Utility - File Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management" version="6.5.0.12573" bpversion="6.10.0.30674" narrative="Utility methods for interacting with the file System." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.2.0.2669" bpversion="6.10.0.30674" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[
try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(Process_Name)
 exists = true
 exit sub
next

catch e as exception
end try

exists = false]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[try

if wildcard then
	title = title.replace("*", ".*")
	title = title.replace("?", "\w")
end if

exists = false
for each p as system.diagnostics.process in system.diagnostics.process.getprocesses()
	if wildcard then
		if system.text.regularexpressions.regex.ismatch(p.mainwindowtitle, title) then
			exists = true
			exit sub
		end if
	else
		if p.mainwindowtitle.tolower = title.tolower then
			exists = true
			exit sub
		end if
	end if
next

catch e as exception

end try
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cd594031-696a-419e-a6c2-36688addfb0f" name="Titles CSV" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-30" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage></process></object>
        <process-group id="489aef9e-7c7a-43dd-a9e9-daa83f4738aa" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="eebdc436-b888-4f77-9d40-797f669ccb29" />
            </members>
        </process-group>
        <object-group id="526c801e-e023-4f9a-8bf1-5bdc3701dd61" name="Utility" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" />
                <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
            </members>
        </object-group>
        <object-group id="f4a981ec-ea6d-49a7-82cb-2328435b18e3" name="Visual Business Objects" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="9fc19dda-3610-454f-8713-a55af212d309" />
                <object id="d731156a-ea9e-4413-831a-19959dab2536" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>